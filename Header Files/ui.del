import "../global.del";
import "creature.del";
import "projectile.del";
import "structures.del";
define VAL1: 0.5;
define VAL2: -0.866;
define FORWARD_VECTOR: Vector(0, VAL2, VAL1);
define RIGHT_VECTOR: Vector(1,0,0);
define UP_VECTOR: Vector(0,VAL1,-VAL2);
//playervar Number Setting_CAMERA_DISTANCE = 12;
define Setting_CAMERA_DISTANCE : 12;
playervar Vector cameraPos = Vector(0,0,0);
playervar Vector cursorWorldPositon;
Vector cameraEye(in Player p){
    return FORWARD_VECTOR * -Setting_CAMERA_DISTANCE + cameraPosition(p);
}

Vector cameraPosition(in Player p){
    return p.cameraPos;
}

define SCALE: 100;
Vector uiPos(in Player p, in Number x, in Number y): (cameraEye(p) +  FORWARD_VECTOR * SCALE+ RIGHT_VECTOR * x + UP_VECTOR * y);

Vector uiPos_customDistance(in Player p, in Number x, in Number y, in Number scale): (cameraEye(p) + FORWARD_VECTOR * scale  + RIGHT_VECTOR * x + UP_VECTOR * y);
Vector towards(Number x, Number y): (FORWARD_VECTOR * SCALE + RIGHT_VECTOR * x + UP_VECTOR * y);
Vector uiToWorld(in Player p, in Number x, in Number y) : (-cameraEye(p).Y/towards(x,y).Y)*towards(x,y) + cameraEye(p);

define manaspace: "  ";
//-.‧:ıΙ 
define controllerhp_nodmg: "ιιιιιι"; //"ΙΙΙΙΙΙ";
define controllerhp_nohealth: "     ";
define controllerhp_divider: "|"; //133
define controllerhp_full: $"{controllerhp_nodmg}{controllerhp_divider}{controllerhp_nodmg}{controllerhp_divider}{controllerhp_nodmg}{controllerhp_divider}{controllerhp_nodmg}{controllerhp_divider}{controllerhp_nodmg}";
define controllerhp_empty: $"{controllerhp_nohealth}{controllerhp_divider}{controllerhp_nohealth}{controllerhp_divider}{controllerhp_nohealth}{controllerhp_divider}{controllerhp_nohealth}{controllerhp_divider}{controllerhp_nohealth}";
define controllerhp_symbols: [" ", ".", "‧", ":", "ı", "Ι"];
// define percentage(Number base): ((health/maxHealth*100)-base)*4;
// String singleSegment(Number base, Number percentage): symbols[Min(6, Max(0, RoundToInteger((percentage-base)*(.6), Rounding.Up)))];

//900+ restart with size 6, now with each square representing 150. This continues infinitely (growing by a factor of 6 each time)

//ĺ/ί/ι/‚/115            [651-875](27-35)[3105-4025]
//ṝ/r/„/ /170:           [401-650](17-26)[2890-4420]
//L/I /ı /  /284:        [251-400](10-16)[2840-4544]
//ㄇ/ㄒ/ㅣ/ /512:         [126-250](6-9)[3072-4608]
// //■■/■□/□□/      /854:[51-125](3-5)[2562-4270]
// //■■■■/■■□□/□□□□/            /1708:[26-50](2)[3416]
//■■■■■■■■/■■■■□□□□/□□□□□□□□/                        /3416:[1-25](1)[3416]
//bar = 25


// //■/▣/□/   /427:240
String hpbar_sep: "|";
Number[] hpbar_dictionary: [0,1,2,3,3,3,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7];
String[][] hpbar_symbols: [
/*0: [empty]*/ ['','','',''],
/*1: [1]*/ ['■■■■■■■■','■■■■□□□□','□□□□□□□□','                        '],
/*2: [2]*/ ['■■■■','■■□□','□□□□','            '],
/*3: [3-5]*/ ['■■', '■□', '□□', '      '],
/*4: [6-9]*/ ['ㄇ', 'ㄒ', 'ㅣ', ' '],
/*5: [10-16]*/ ['L', 'I ', 'ı ', '  '],
/*6: [17-26]*/ ['ṝ', 'r', '„',' '],
/*7: [27-35]*/ ['ĺ', 'ί', 'ι', '‚']
];
