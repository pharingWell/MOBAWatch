import "../Header Files/ui.del";
import "../Header Files/state.del";
import "../Header Files/main.del";
import "../debug.ostw";
import "../debug.del";
import "../const.del";

rule: 'Global Camera Setup'
{
    //cursor
    define cursorPosition: uiPos(LocalPlayer(),HorizontalFacingAngleOf(LocalPlayer()),-VerticalFacingAngleOf(LocalPlayer()));
    CreateInWorldText(LocalPlayer(),"â€¢",UpdateEveryFrame(cursorPosition), 2.5, Clipping.DoNotClip, InworldTextRev.VisibleToAndPosition);
    CreateEffect(LocalPlayer(),Effect.Sphere, Color.Aqua, UpdateEveryFrame(LocalPlayer().cursorWorldPositon),0.1,EffectRev.VisibleToPositionAndRadius);

}

rule: 'Player Camera Setup'
Event.OngoingPlayer
if(!IsDummyBot(EventPlayer()))
{
    DisableGameModeHud();
    StartCamera(EventPlayer(),cameraEye(EventPlayer()),cameraPosition(EventPlayer()),CAMERA_INTERP);
    //ChaseVariableAtRate(EventPlayer().cursorWorldPositon,,99999,RateChaseReevaluation.DestinationAndRate);
    WaitUntil(HasSpawned(EventPlayer())==true,9999);
    EventPlayer().cameraPos = Vector(0,40,1);
    WaitUntil(READY==true,999);
    EventPlayer().cameraPos = Vector(0,0,1);
}

rule: 'Toggle Camera Lock'
Event.OngoingPlayer
if(getPlayerInfo(EPlayerInfo.IS_READY))
if(IsButtonHeld(EventPlayer(), BUTTON_CAMERA))
{
    WaitUntil(IsButtonHeld(EventPlayer(), BUTTON_CAMERA) == false, 0.3);
    if(IsButtonHeld(EventPlayer(), BUTTON_CAMERA) == false){
        if(isCameraLocked){
            cameraPos = otherModelMember.Position();
        }
        isCameraLocked = !isCameraLocked;
        Abort();
    }
    CreateEffect(EventPlayer(), Effect.LightShaft, Color.Blue, otherModelMember.Position()*Vector(1,0,1), otherModelMember.heroSize, EffectRev.PositionAndRadius);
    define cameraLockEffect! = LastCreatedEntity();
    ChaseVariableAtRate(cameraPos, otherModelMember.Position(), 99999, RateChaseReevaluation.DestinationAndRate);
    WaitUntil(!IsButtonHeld(EventPlayer(), BUTTON_CAMERA), 999);
    StopChasingVariable(cameraPos);
    DestroyEffect(cameraLockEffect);
}

define log(Number x): (10000 * (RaiseToPower(x, 0.0001) - 1));

# Caution! There is a 2 tick wait between when the variable is set and when it gets teleported
void teleportCamera(ref Vector newPosition){
    showHUD = 0;
    //async_workaround_updateCells = true;
    Wait(0.032);
    define numerator! = 1+2*log(DistanceBetween(cursorWorldPositon, cameraPos));
    EventPlayer().cameraPos = newPosition; 
    Wait(numerator/CAMERA_INTERP);
    //ChaseVariableOverTime(showHUD, 1, 8/CAMERA_INTERP, TimeChaseReevaluation.None);
    showHUD = 1;
    Wait(8/CAMERA_INTERP);
}