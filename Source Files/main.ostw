import "../customGameSettings.json";
import "../Header Files/main.del";

import "../error.ostw";
import "../debug.ostw";
import "../tests.ostw";

import "state.ostw";
import "ui.ostw";
import "creature.ostw"; 
import "minion.ostw";
globalvar String debugString;
rule: 'Setup Phase'
{   
    gamePhase = EGamePhase.LOADING;
    gameState[EGamePhase.LOADING] = ELoadingState.RENDER_SETUP;
    WaitUntil(gameState[EGamePhase.LOADING] >= ELoadingState.FINISHED, 9999);
    gamePhase = EGamePhase.BATTLE;
    //printToScreen($"{CountOf(tickOffsetSorted)}",Location.Left,true);
}

rule: 'Debug Tings'
{
    CreateHudText(LocalPlayer(),TextCount(),gameState[EGamePhase.LOADING],null,Location.Top,0,Color.Aqua,Color.Aqua,null,HudTextRev.VisibleToAndString,Spectators.DefaultVisibility);
    ForcePlayerHero(HostPlayer(),Hero.Ana);
    printToScreen("active cells: " + toString(LocalPlayer().cellCreatures.Values));
    printToScreen("rendered minions: " + toString(LocalPlayer().renderCreatures));
    CreateEffect(LocalPlayer(),Effect.Sphere,Color.Aqua,Vector(0,0,10),1,EffectRev.VisibleToPositionRadiusAndColor);
    CreateEffect(LocalPlayer(),Effect.Sphere,Color.Red,Vector(0,0,-10),1,EffectRev.VisibleToPositionRadiusAndColor);
    Wait(3);
    waveConstructor();
    SetMatchTime(0);
}
rule: 'Create Minion For Host'
if(IsButtonHeld(HostPlayer(),Button.Interact))
{
    waveConstructor();
    //debugString = toString(tickOffsetSorted);
    WaitUntil(IsButtonHeld(HostPlayer(),Button.Interact)==false, 10);
}